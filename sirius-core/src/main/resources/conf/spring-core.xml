<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- <context:property-placeholder location="classpath*:jdbc.properties,classpath*:redis.properties"/> -->
    
    <bean id="propertyConfigurer" class="com.bcyj99.sirius.core.common.utils.MyPropertyPlaceholderConfigurer">  
        <property name="locations">
            <list>
                <!-- 这里支持多种寻址方式：classpath和file -->
                <!-- <value>classpath*:properties/jdbc.properties</value>
                <value>classpath*:properties/redis.properties</value>
                <value>classpath*:properties/rabbitmq.properties</value> -->
                
                <value>classpath*:properties/*.properties</value>
                
                <!-- 推荐使用file的方式引入，这样可以将配置和代码分离 -->  
                <!-- <value>file:/app/conf/ydd/properties/*.properties</value> -->
            </list>
        </property>  
    </bean>
    
    <context:component-scan base-package="com.bcyj99.sirius.**.service.**"/>
    
    <bean id="messageSource"
	class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="messages"/>
    </bean>
    
    <bean class="com.bcyj99.sirius.core.common.utils.SpringApplicationContextHolder"/>
    
    <bean id="threadPoolTaskExecutor"
        class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最小数量-->
        <property name="corePoolSize" value="3" />
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="10" />
        <!-- 队列最大长度 >=mainExecutor.maxSize -->
        <property name="queueCapacity" value="25" />
        <!-- 空闲线程的存活时间-->
        <property name="keepAliveSeconds" value="300" />
        <!-- 线程池对拒绝任务(无线程可用)的处理策略 ThreadPoolExecutor.CallerRunsPolicy策略 ,调用者的线程会执行该任务,如果执行器已关闭,则丢弃.  -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
    </bean>
    
    <import resource="spring-mybatis.xml"/>
    <import resource="spring-kaptcha.xml"/>
    <import resource="spring-redis.xml"/>
    <import resource="spring-security.xml"/>
    <import resource="spring-session.xml"/>
    <import resource="spring-amqp.xml"/>
    <import resource="spring-activiti.xml"/>
</beans>